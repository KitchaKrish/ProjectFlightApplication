package com.user.Repo;

import static org.junit.jupiter.api.Assertions.assertEquals;

import java.util.ArrayList;
import java.util.List;

import org.junit.jupiter.api.Test;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.test.context.SpringBootTest;
import org.springframework.boot.test.context.SpringBootTest.WebEnvironment;
import org.springframework.boot.test.web.client.TestRestTemplate;
import org.springframework.boot.web.server.LocalServerPort;
import org.springframework.http.ResponseEntity;

import com.user.ctrl.FlightCtrl;
import com.user.ticket.entity.PassangerDetails;
import com.user.ticket.entity.ShowticketDetails;
import com.user.ticket.entity.TicketBookingModel;

@SpringBootTest(webEnvironment = WebEnvironment.RANDOM_PORT)
public class UserCtrlTest {

	@Autowired
	private FlightCtrl ctrl;

	@Autowired
	private TestRestTemplate restTemplate;

	@Test
	void contextLoads() {
	}

	@LocalServerPort
	private int port;

	
	
	public void ticketbook() {
		
		
		PassangerDetails details = new PassangerDetails("Test", "", "male", 20, "veg");
		List<PassangerDetails> pass = new ArrayList<PassangerDetails>();	
		TicketBookingModel ticketBookModel = new TicketBookingModel(
				"CHE","CBE","ABC","ABC","2022-06-01","11:00","12:00","","12000","ABC","Test@junit.com",pass);	
		
		
		ResponseEntity<ShowticketDetails> response = this.restTemplate.postForEntity(
				"http://localhost:" + port + "/api/user/flightctrl/ticketBook",ticketBookModel,
				ShowticketDetails.class);
		
		assertEquals(response.getStatusCodeValue(), 200);
		ShowticketDetails showticketDetails = response.getBody();
		assertEquals(showticketDetails.isStatus(), true);

		
		
		String pnr = showticketDetails.getTicketBooking().getPnrNumber();
		String mode = "ByPnrNumber";
		ResponseEntity<ShowticketDetails> response2 = this.restTemplate.getForEntity(
				"http://localhost:" + port + "/api/user/flightctrl/searchTicket/" + pnr + "/" + mode,
				ShowticketDetails.class);

		System.out.println("----->>>" + response2.getStatusCodeValue());
		assertEquals(response.getStatusCodeValue(), 200);
		ShowticketDetails details2 = response.getBody();

		assertEquals(details2.isStatus(), true);
		
		
		String userEmail = "Test@gmail.com";
		 mode = "ByEmail";
		ResponseEntity<ShowticketDetails> emailresponse = this.restTemplate.getForEntity(
				"http://localhost:" + port + "/api/user/flightctrl/searchTicket/" + userEmail + "/" + mode,
				ShowticketDetails.class);

		System.out.println("----->>>" + emailresponse.getStatusCodeValue());
		assertEquals(response.getStatusCodeValue(), 200);
		ShowticketDetails ticketDetails = response.getBody();

		assertEquals(ticketDetails.isStatus(), true);
		
		userEmail = "Test@gma.com";
		 mode = "ByEmail";
		ResponseEntity<ShowticketDetails> errorresponse = this.restTemplate.getForEntity(
				"http://localhost:" + port + "/api/user/flightctrl/searchTicket/" + userEmail + "/" + mode,
				ShowticketDetails.class);

		assertEquals(errorresponse.getStatusCodeValue(), 200);
		ShowticketDetails errorDetails = errorresponse.getBody();

		assertEquals(errorDetails.isStatus(), false);
		
		
		userEmail = null;
		 mode = null;
		ResponseEntity<ShowticketDetails> catchResponse = this.restTemplate.getForEntity(
				"http://localhost:" + port + "/api/user/flightctrl/searchTicket/" + userEmail + "/" + mode,
				ShowticketDetails.class);

		assertEquals(catchResponse.getStatusCodeValue(), 200);
		ShowticketDetails catchDetails = errorresponse.getBody();

		assertEquals(catchDetails.isStatus(), false);

		
		
		
		
		
		
		}
	
	
	
	
	
	
	@Test
	public void showTicket() {
		
		String pnr = "PNR0008763";
		String mode = "ByPnrNumber";
		ResponseEntity<ShowticketDetails> response = this.restTemplate.getForEntity(
				"http://localhost:" + port + "/api/user/flightctrl/searchTicket/" + pnr + "/" + mode,
				ShowticketDetails.class);

		System.out.println("----->>>" + response.getStatusCodeValue());
		assertEquals(response.getStatusCodeValue(), 200);
		ShowticketDetails details = response.getBody();

		assertEquals(details.isStatus(), true);
		
		
		String userEmail = "Test@gmail.com";
		 mode = "ByEmail";
		ResponseEntity<ShowticketDetails> emailresponse = this.restTemplate.getForEntity(
				"http://localhost:" + port + "/api/user/flightctrl/searchTicket/" + userEmail + "/" + mode,
				ShowticketDetails.class);

		System.out.println("----->>>" + emailresponse.getStatusCodeValue());
		assertEquals(response.getStatusCodeValue(), 200);
		ShowticketDetails showticketDetails = response.getBody();

		assertEquals(showticketDetails.isStatus(), true);
		
		userEmail = "Test@gma.com";
		 mode = "ByEmail";
		ResponseEntity<ShowticketDetails> errorresponse = this.restTemplate.getForEntity(
				"http://localhost:" + port + "/api/user/flightctrl/searchTicket/" + userEmail + "/" + mode,
				ShowticketDetails.class);

		assertEquals(errorresponse.getStatusCodeValue(), 200);
		ShowticketDetails errorDetails = errorresponse.getBody();

		assertEquals(errorDetails.isStatus(), false);
		
		
		userEmail = null;
		 mode = null;
		ResponseEntity<ShowticketDetails> catchResponse = this.restTemplate.getForEntity(
				"http://localhost:" + port + "/api/user/flightctrl/searchTicket/" + userEmail + "/" + mode,
				ShowticketDetails.class);

		assertEquals(catchResponse.getStatusCodeValue(), 200);
		ShowticketDetails catchDetails = errorresponse.getBody();

		assertEquals(catchDetails.isStatus(), false);

		
	}

}
