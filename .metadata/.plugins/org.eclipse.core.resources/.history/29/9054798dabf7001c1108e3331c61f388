package com.admin.Repo;

import static org.assertj.core.api.Assertions.assertThat;
import static org.junit.jupiter.api.Assertions.assertEquals;

import java.util.List;

import org.junit.jupiter.api.Test;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.test.context.SpringBootTest;
import org.springframework.boot.test.context.SpringBootTest.WebEnvironment;
import org.springframework.boot.test.web.client.TestRestTemplate;
import org.springframework.boot.web.server.LocalServerPort;
import org.springframework.http.ResponseEntity;

import com.admin.entity.AirLine;
import com.admin.entity.FlightDetails;
import com.admin.entity.OutputModel;
import com.admin.service.AdminService;
import com.admin.service.IAirLineRepostiory;
import com.admin.service.IFlightDetailsRepostiory;
import com.admin.service.IUseraccountRepostiory;

@SpringBootTest(webEnvironment = WebEnvironment.RANDOM_PORT)
public class AdminCtrlTest {

	@LocalServerPort
	private int port;

	@Autowired
	private TestRestTemplate restTemplate;

	@Autowired
	private IUseraccountRepostiory useraccountRepostiory;

	@Autowired
	private IAirLineRepostiory airLineRepostiory;

	@Autowired
	private IFlightDetailsRepostiory iFlightDetailsRepostiory;

	@Autowired
	private AdminService adminService;

	@Test
	public void testJunt() {
		assertThat(
				this.restTemplate.getForObject("http://localhost:" + port + "//api/admin/adminCtrl/test", String.class))
						.contains("Hello World!!!!");
	}

	@Test
	public void allAirline() {

		ResponseEntity<AirLine[]> response = this.restTemplate
				.getForEntity("http://localhost:" + port + "//api/admin/adminCtrl/getAllAirLine", AirLine[].class);

		System.out.println("----->>>" + response.getStatusCodeValue());
		assertEquals(response.getStatusCodeValue(), 200);

	}

	@Test
	public void allFlight() {

		ResponseEntity<FlightDetails[]> response = this.restTemplate.getForEntity(
				"http://localhost:" + port + "//api/admin/adminCtrl/fetchAllFlight", FlightDetails[].class);

		System.out.println("----->>>" + response.getStatusCodeValue());
		assertEquals(response.getStatusCodeValue(), 200);

	}

	@Test
	public void createAirline() {
		AirLine airLine = new AirLine("TestAirline", "1234", true, "TA");
		ResponseEntity<OutputModel> response = this.restTemplate.postForEntity(
				"http://localhost:" + port + "//api/admin/adminCtrl/createAirLine", airLine, OutputModel.class);

		System.out.println("----->>>" + response.getStatusCodeValue());
		assertEquals(response.getStatusCodeValue(), 200);
		OutputModel outputModel = response.getBody();
		assertEquals(outputModel.isStatus(), true);

	}

	@Test
	public void createFlight() {
		FlightDetails details = new FlightDetails("JunitFlight", "JF", true, "CBE", "CHE", "", "12:00", "13:00", "1:00",
				"AllDays", "Indico");
		ResponseEntity<OutputModel> response = this.restTemplate.postForEntity(
				"http://localhost:" + port + "//api/admin/adminCtrl/createNewFlight", details, OutputModel.class);

		System.out.println("----->>>" + response.getStatusCodeValue());
		assertEquals(response.getStatusCodeValue(), 200);
		OutputModel outputModel = response.getBody();
		assertEquals(outputModel.isStatus(), true);
	}

	
	
	
	@Test
	public void getAirline() {
		AirLine airLine = new AirLine("TestAirline", "1234", true, "TA");

		ResponseEntity<AirLine[]> response = this.restTemplate.getForEntity(
				"http://localhost:" + port + "//api/admin/adminCtrl/searchAirLineByName/"+airLine.getAirlineName(), AirLine[].class);

		System.out.println("----->>>" + response.getStatusCodeValue());
		assertEquals(response.getStatusCodeValue(), 200);
		AirLine[] outputModel = response.getBody();
		for(AirLine air:outputModel) {
			System.out.println(air.getAirlineId());
		}
	}

//getAllAirLine
}
